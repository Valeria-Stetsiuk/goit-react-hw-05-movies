{"version":3,"file":"static/js/549.a157c452.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","components/Loader/loader.styled.js","pages/MoviesDetailsPage/MoviesDetailsPage.styled.js","pages/MoviesDetailsPage/MoviesDetailsPage.jsx","services/MoviesApi.js"],"sourcesContent":["export const Loader = () => <p>Loading ...</p>;\n","import styled from 'styled-components';\n\nexport const UpdateLoader = styled.div`\n  position: absolute;\n  left: 50%;\n  top: 50%;\n`;\n","import styled from 'styled-components';\n\nexport const Poster = styled.div``;\nexport const Image = styled.img``;\nexport const MainContainer = styled.div`\n  gap: 20px;\n  padding: 20px;\n  display: flex;\n  box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n    1px 4px 6px rgba(0, 0, 0, 0.16);\n`;\nexport const Btn = styled.button`\n  margin: 10px auto 10px 20px;\n  color: #ffffff;\n  background-color: #07c;\n  border-color: transparent;\n  border-radius: 3px;\n  padding: 8px;\n  cursor: pointer;\n`;\nexport const SecondTitle = styled.h3`\n  padding-left: 20px;\n  color: #ff0bef;\n`;\nexport const ListAdditionalInfo = styled.ul`\n  list-style: none;\n  margin: 0;\n`;\nexport const Subtitle = styled.p`\n  color: #fff;\n`;\n","import { Outlet, useParams, useLocation, useNavigate } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { MoviesAPI } from '../../services/MoviesApi';\nimport { Loader } from '../../components/Loader/Loader';\nimport { UpdateLoader } from '../../components/Loader/loader.styled';\nimport { Link } from '../../components/Navigation/Navigation.styled';\nimport {\n  Poster,\n  Image,\n  MainContainer,\n  Btn,\n  SecondTitle,\n  ListAdditionalInfo,\n  Subtitle,\n} from '../MoviesDetailsPage/MoviesDetailsPage.styled';\n\nconst MoviesDetails = () => {\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const navigation = useNavigate();\n\n  useEffect(() => {\n    const getMovie = async movieId => {\n      setIsLoading(true);\n      try {\n        const movieDetails = await MoviesAPI.fetchMovieById(movieId);\n        console.log(movieDetails);\n        setMovieInfo(movieDetails);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getMovie(movieId);\n  }, [movieId]);\n\n  const onBtnClick = () => {\n    navigation(location?.state?.from ?? '/');\n  };\n  console.log(movieInfo);\n\n  return (\n    <>\n      {isLoading && (\n        <UpdateLoader>\n          <Loader />\n        </UpdateLoader>\n      )}\n      {movieInfo && (\n        <>\n          <Btn type=\"button\" onClick={onBtnClick}>\n            Go back\n          </Btn>\n          <MainContainer>\n            <Poster>\n              <Image\n                src={`https://image.tmdb.org/t/p/w500${movieInfo.poster_path}`}\n                alt={\n                  movieInfo.title ?? movieInfo.original_name ?? movieInfo.name\n                }\n                width=\"250\"\n              />\n            </Poster>\n            <div>\n              <h2>\n                {movieInfo.title ?? movieInfo.original_name ?? movieInfo.name} (\n                {new Date(movieInfo.release_date).getFullYear()})\n              </h2>\n              <Subtitle>\n                User score: {Math.round(movieInfo.vote_average * 10)} %\n              </Subtitle>\n              <h3>Genres</h3>\n              <Subtitle>\n                {movieInfo.genres?.map(({ name }) => name).join(', ')}\n              </Subtitle>\n              <h3>Overview</h3>\n              <Subtitle>{movieInfo.overview}</Subtitle>\n            </div>\n          </MainContainer>\n          <SecondTitle>Additional information</SecondTitle>\n\n          <ListAdditionalInfo>\n            <li>\n              <Link to=\"cast\" state={location.state}>\n                Cast\n              </Link>\n            </li>\n            <li>\n              <Link to=\"reviews\" state={location.state}>\n                Reviews\n              </Link>\n            </li>\n          </ListAdditionalInfo>\n        </>\n      )}\n      {error && <p>Ooops!</p>}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MoviesDetails;\n","import axios from 'axios';\nconst KEY = 'aaa1d6367cdda8ac8cbbbe618a1aa87a';\n\nexport const MoviesAPI = {\n  async fetchMovies() {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`\n    );\n    return await response.data.results;\n  },\n  async fetchMovieById(movieId) {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${KEY}&language=en-US`\n    );\n    return await response.data;\n  },\n  async fetchMovieBySearch(searchTitle) {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&language=en-US&query=${searchTitle}&page=1&include_adult=false`\n    );\n    return await response.data.results;\n  },\n  async fetchMovieCast(movieId) {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n    );\n    return await response.data;\n  },\n  async fetchMovieReviews(movieId) {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n    );\n    return await response.data;\n  },\n};\n"],"names":["Loader","UpdateLoader","styled","Poster","Image","MainContainer","Btn","SecondTitle","ListAdditionalInfo","Subtitle","useState","movieInfo","setMovieInfo","isLoading","setIsLoading","error","setError","movieId","useParams","location","useLocation","navigation","useNavigate","useEffect","getMovie","MoviesAPI","movieDetails","console","log","message","type","onClick","state","from","src","poster_path","alt","title","original_name","name","width","Date","release_date","getFullYear","Math","round","vote_average","genres","map","join","overview","to","Suspense","fallback","KEY","fetchMovies","axios","response","data","results","fetchMovieById","fetchMovieBySearch","searchTitle","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}