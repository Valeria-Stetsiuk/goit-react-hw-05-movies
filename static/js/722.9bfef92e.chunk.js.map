{"version":3,"file":"static/js/722.9bfef92e.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","components/Loader/loader.styled.js","components/Search/Search.styled.js","components/Search/Search.jsx","pages/MoviesPage/MoviesPage.styles.js","pages/MoviesPage/MoviesPage.jsx","servies/MoviesApi.js"],"sourcesContent":["export const Loader = () => <p>Loading ...</p>;\n","import styled from 'styled-components';\n\nexport const UpdateLoader = styled.div`\n  position: absolute;\n  left: 50%;\n  top: 50%;\n`;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  gap: 10px;\n  margin-left: 40px;\n  margin-top: 30px;\n`;\nexport const Button = styled.button`\n  color: #ff0bef;\n  background-color: #fff;\n  border: none;\n  font-size: 16px;\n  padding: 5px 15px;\n  &:hover {\n    color: red;\n    background-color: rgb(206, 160, 160);\n    box-shadow: #fff;\n  }\n`;\n\nexport const Input = styled.input`\n  color: black;\n  background-color: #fff;\n  &:focus {\n    outline-color: red;\n  }\n`;\n","import { Form, Button, Input } from './Search.styled';\n\nexport const SearchBox = ({ value, onInput, onFormSubmit }) => {\n  return (\n    <div>\n      <Form onSubmit={onFormSubmit}>\n        <Input type=\"text\" name=\"search\" value={value} onInput={onInput} />\n        <Button>Search</Button>\n      </Form>\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const MovieList = styled.ul`\n  list-style: none;\n  color: #ff0bef;\n`;\n","import { useState, useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { MoviesAPI } from '../../servies/MoviesApi';\nimport { SearchBox } from '../../components/Search/Search';\nimport { Loader } from '../../components/Loader/Loader';\nimport { MovieList } from '../../pages/MoviesPage/MoviesPage.styles';\nimport { UpdateLoader } from '../../components/Loader/loader.styled';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const filterParam = searchParams.get('searchQuery') ?? '';\n\n  useEffect(() => {\n    const getMovies = async filterParam => {\n      setIsLoading(true);\n      try {\n        const moviesResponse = await MoviesAPI.fetchMovieBySearch(filterParam);\n\n        if (!moviesResponse.length) {\n          throw new Error('Oops!');\n        }\n        setMovies(moviesResponse);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    if (filterParam) {\n      getMovies(filterParam);\n    }\n  }, [filterParam]);\n\n  const onFormSubmit = event => {\n    event.preventDefault();\n    setSearchParams({ searchQuery });\n    setMovies([]);\n    setError(null);\n  };\n\n  const onInput = e => {\n    setSearchQuery(e.target.value);\n  };\n\n  return (\n    <>\n      <SearchBox\n        value={searchQuery}\n        onInput={onInput}\n        onFormSubmit={onFormSubmit}\n      />\n\n      {isLoading && (\n        <UpdateLoader>\n          <Loader />\n        </UpdateLoader>\n      )}\n      {error && (\n        <p>\n          Sorry! We didn't find anything on your query! Change search query and\n          try again!\n        </p>\n      )}\n      {movies.length > 0 && (\n        <MovieList>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <Link to={`${movie.id}`} state={{ from: location }}>\n                {movie.original_name ?? movie.title ?? movie.name}\n              </Link>\n            </li>\n          ))}\n        </MovieList>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nconst KEY = 'aaa1d6367cdda8ac8cbbbe618a1aa87a';\n\nexport const MoviesAPI = {\n  async fetchMovies() {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`\n    );\n    return await response.data.results;\n  },\n  async fetchMovieById(movieId) {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${KEY}&language=en-US`\n    );\n    return await response.data;\n  },\n  async fetchMovieBySearch(searchTitle) {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&language=en-US&query=${searchTitle}&page=1&include_adult=false`\n    );\n    return await response.data.results;\n  },\n  async fetchMovieCast(movieId) {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n    );\n    return await response.data;\n  },\n  async fetchMovieReviews(movieId) {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n    );\n    return await response.data;\n  },\n};\n"],"names":["Loader","UpdateLoader","styled","Form","Button","Input","SearchBox","value","onInput","onFormSubmit","onSubmit","type","name","MovieList","location","useLocation","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","searchQuery","setSearchQuery","isLoading","setIsLoading","error","setError","filterParam","get","useEffect","getMovies","MoviesAPI","moviesResponse","length","Error","message","e","target","event","preventDefault","map","movie","to","id","state","from","original_name","title","KEY","fetchMovies","axios","response","data","results","fetchMovieById","movieId","fetchMovieBySearch","searchTitle","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}